library(readr)
data <- read_csv("Speed Dating Data copy.csv",
col_types = cols(dec = col_logical(),
dec_o = col_logical(), match = col_logical(),
samerace = col_logical()))
library(tidyverse)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#turn goal into a factor -
data$goal <- as.factor(data$goal)
view(data$goal)
#create ImpSameRace which weights whether two parners are of the same race by how important the OG determines it to be
view(data %>% mutate(impSameRace = (imprace * .1) * samerace))
dat2[, 15]
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
view(dat2)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#weighted attractions - essentially, take the "attr_o" set of charactersitics, and "attr" set of characteristics,
#which are weighted by out of 100, and then put them as a decimal
#For Other Partner's preferences
#data[, 10:15] <- data[, 10:15] / 100 #if applied to dat don't do it more than once.
#For Other partner's perspective of the OG
data[, 36:41]
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
view(appealSet)
#for summary statistics on what people look for ----
appealSet <- distinct(data = data[, 36:41])
#for summary statistics on what people look for ----
appealSet <- distinct(.data = data[, 36:41])
view(appealSet)
#for summary statistics on what people look for ----
appealSet <- distinct(.data = data[, 36:41]) %>% filter(!is.na(attr1_2)) #pull the individual people
nrows(appealSet)
n(appealSet)
count(appealSet)
summary(appealSet)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#match statistics generation ----
data <- data %>% mutate(weightGap = abs(sumWeights - sumWeights_o),
likeGap = abs(like - like_o)) #can add for all attributes / let's see how this goes though
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#for summary statistics on people's perspectives of themselves
summary(data$weightGap, data$likeGap)
summary(data$likeGap)
distributions[3] <- data %>% filter(!is.na(weightGap)) %>% select("weightGap") %>% summary()
distributions
View(data)
View(data)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
miscDistributions[["optimism"]] <- summary(data$optimism)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#making a dictionary of distributions of certain bits of quant information ----
appealSet <- distinct(.data = data[, c(36:41, 62)]) %>% filter(!is.na(attr1_2)) #pull the individual people
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
appealDistributions <- summary(appealSet[, 36:41]) #attraction is the median/mean highest wanted, ambition is mean/median lowest
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
summary(appealSet[, 36:41]) #attraction is the median/mean highest wanted, ambition is mean/median lowest
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
perceptionGapDist <- data %>% filter(!is.na(weightGap)) %>% select("diffWeightLike") %>% summary()
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
DistList[["appealSet"]] <- distinct(.data = data[, 36:41]) %>% filter(!is.na(attr1_2)) #pull the individual people
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
library(readr)
data <- read_csv("Speed Dating Data copy.csv")
View(data)
#match statistics generation ----
data <- data %>% mutate(weightGap = abs(sumWeights - sumWeights_o),
likeGap = abs(like - like_o)) #can add for all attributes / let's see how this goes though
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
View(data)
View(data)
#probit model: Predicting OG's reaction to the Other (Dep: dec) ----
colnames(data)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
decProbit <- decData %>% filter(!is.na(dec) & !is.na(sumWeights) & !is.na(like) &
!is.na(int_corr) & !is.na(impSameRace) & !is.na(optimism)) %>%
glm(data = ., dec ~ sumWeights + like + int_corr + impSamerace + optimism,
family = binomial(link = "probit"))
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
decData <- data %>% select("dec", "sumWeights", "int_corr", "impSameRace", "optimism")
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
#determine average like/weight gaps with matched individuals, average optimism ----
data %>% select(weightGap) %>% filter(!is.na(weightGap)) %>% summary()
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
distList[1]
install.packages("summarytools")
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
names(appealSet) <- c("Attractiveness", "Sincerity", "Intelligence", "Fun", "Ambition", "Shared Interests")
summarytools::descr(appealSet)
summarytools::descr(data$optimism)
summarytools::descr(data[, c("optimism", "expnum", "exphappy")])
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap)
#among the overall
summarytools::descr(data[, c("weightGap", "likeGap")])
#among those who got a match
summarytools::descr(data[, c("weightGap", "likeGap")])
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap)
#among the overall
summarytools::descr(data[, c("weightGap", "likeGap")])
#among those who got a match
summarytools::descr(temp)
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap)
temp2 <- data %>% filter(match == 0) %>% select(weightGap, likeGap)
#among the overall
summarytools::descr(temp2)
#among those who got a match
summarytools::descr(temp)
summary(decProbit)
summary(matchProbit)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
# Chunk 1
summarytools::descr(appealSet)
# Chunk 2
summarytools::descr(data[, c("optimism", "expnum", "exphappy")])
# Chunk 3
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap)
temp2 <- data %>% filter(match == 0) %>% select(weightGap, likeGap)
#among the overall
summarytools::descr(temp2)
#among those who got a match
summarytools::descr(temp)
# Chunk 4
summary(decProbit)
# Chunk 5
summary(matchProbit)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
summary(decProbitWOLike)
summary(decProbitWLike)
summary(matchProbit)
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap, diffWeightLike)
temp2 <- data %>% filter(match == 0) %>% select(weightGap, likeGap, diffWeightLike)
#among the overall
summarytools::descr(temp2)
#among those who got a match
summarytools::descr(temp)
source('C:/Users/saipr/Desktop/Coding/R/!With Markdown/Speed Dating Probit Model/codeScript.R', echo=TRUE)
# Chunk 1
library(tidyverse)
library(ggplot2)
library(summarytools)
# Chunk 2
summarytools::descr(appealSet)
# Chunk 3
summarytools::descr(data[, c("optimism", "expnum", "exphappy")])
# Chunk 4
temp <- data %>% filter(match == 1) %>% select(weightGap, likeGap, diffWeightLike)
temp2 <- data %>% filter(match == 0) %>% select(weightGap, likeGap, diffWeightLike)
#among the overall
summarytools::descr(temp2)
#among those who got a match
summarytools::descr(temp)
# Chunk 5
summary(decProbitWOLike)
summary(decProbitWLike)
# Chunk 6
summary(matchProbit)
summary(decProbitWOLike)
summary(decProbitWLike)
summary(decProbitWOLike)
summary(decProbitWLike)
decData <- data %>% select("dec", "sumWeights", "int_corr", "like", "impSameRace", "optimism")
decProbitWLike <- decData %>% filter(!is.na(dec) & !is.na(sumWeights) &!is.na(like) &
!is.na(int_corr) & !is.na(impSameRace) & !is.na(optimism)) %>%
glm(data = ., dec ~ sumWeights + like + int_corr + impSameRace + optimism,
family = binomial(link = "probit"))
decProbitWOLike <- decData %>% filter(!is.na(dec) & !is.na(sumWeights) &
!is.na(int_corr) & !is.na(impSameRace) & !is.na(optimism)) %>%
glm(data = ., dec ~ sumWeights + int_corr + impSameRace + optimism,
family = binomial(link = "probit"))
summary(decProbitWOLike)
summary(decProbitWLike)
